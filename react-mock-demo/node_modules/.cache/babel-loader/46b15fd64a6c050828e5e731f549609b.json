{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\workSpace\\\\react-mock-demo\\\\src\\\\mock3.js\";\nimport React from 'react';\n\nclass Mock extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.ajax = url => {\n      var p = new Promise(function (res, rej) {\n        var xhr = new XMLHttpRequest();\n\n        xhr.onreadystatechange = function () {\n          if (xhr.readyState != 4) return;\n\n          if (xhr.readyState == 4 && xhr.status == 200) {\n            //将返回json格式的内容转为对象\n            res(JSON.parse(xhr.response));\n          } else {\n            rej('error');\n          }\n        };\n\n        xhr.open('get', url);\n        xhr.send(null);\n      });\n      return p;\n    };\n\n    this.state = {\n      gData: null\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  async getData() {\n    // this.ajax('/getdata')\n    //     .then(\n    //         (res) => {\n    //             this.setState({\n    //                 gData: res.message\n    //             })\n    //     })\n    //     .catch((err) => {\n    //         console.log(err)\n    //     })\n    try {\n      const res = await this.ajax('/getdata');\n      this.setState({\n        getData: res.message\n      });\n    } catch {}\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: this.state.gData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.getData,\n        children: \"\\u70B9\\u51FB\\u83B7\\u53D6(Get)Mock\\u6570\\u636E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Mock;","map":{"version":3,"sources":["D:/workSpace/react-mock-demo/src/mock3.js"],"names":["React","Mock","Component","constructor","props","ajax","url","p","Promise","res","rej","xhr","XMLHttpRequest","onreadystatechange","readyState","status","JSON","parse","response","open","send","state","gData","componentDidMount","getData","setState","message","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,IATmB,GASXC,GAAD,IAAS;AACZ,UAAIC,CAAC,GAAG,IAAIC,OAAJ,CAAY,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AACpC,YAAIC,GAAG,GAAG,IAAIC,cAAJ,EAAV;;AACAD,QAAAA,GAAG,CAACE,kBAAJ,GAAyB,YAAY;AACjC,cAAIF,GAAG,CAACG,UAAJ,IAAkB,CAAtB,EAAyB;;AACzB,cAAIH,GAAG,CAACG,UAAJ,IAAkB,CAAlB,IAAuBH,GAAG,CAACI,MAAJ,IAAc,GAAzC,EAA8C;AAC1C;AACAN,YAAAA,GAAG,CAACO,IAAI,CAACC,KAAL,CAAWN,GAAG,CAACO,QAAf,CAAD,CAAH;AACH,WAHD,MAGO;AACHR,YAAAA,GAAG,CAAC,OAAD,CAAH;AACH;AACJ,SARD;;AASAC,QAAAA,GAAG,CAACQ,IAAJ,CAAS,KAAT,EAAgBb,GAAhB;AACAK,QAAAA,GAAG,CAACS,IAAJ,CAAS,IAAT;AACH,OAbO,CAAR;AAcA,aAAOb,CAAP;AACH,KAzBkB;;AAEf,SAAKc,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,OAAL;AACH;;AAkBD,QAAMA,OAAN,GAAiB;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAG;AACC,YAAMf,GAAG,GAAC,MAAM,KAAKJ,IAAL,CAAU,UAAV,CAAhB;AACA,WAAKoB,QAAL,CAAc;AACVD,QAAAA,OAAO,EAACf,GAAG,CAACiB;AADF,OAAd;AAGH,KALD,CAKC,MAAK,CAEL;AAEJ;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAK,QAAA,GAAG,EAAE,KAAKN,KAAL,CAAWC;AAArB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAE,KAAKE,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAvD8B;;AAyDnC,eAAevB,IAAf","sourcesContent":["import React from 'react'\r\nclass Mock extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            gData: null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.getData()\r\n    }\r\n    ajax = (url) => {\r\n        var p = new Promise(function (res, rej) {\r\n            var xhr = new XMLHttpRequest()\r\n            xhr.onreadystatechange = function () {\r\n                if (xhr.readyState != 4) return\r\n                if (xhr.readyState == 4 && xhr.status == 200) {\r\n                    //将返回json格式的内容转为对象\r\n                    res(JSON.parse(xhr.response))\r\n                } else {\r\n                    rej('error')\r\n                }\r\n            }\r\n            xhr.open('get', url)\r\n            xhr.send(null)\r\n        })\r\n        return p\r\n    }\r\n    async getData()  {\r\n        // this.ajax('/getdata')\r\n        //     .then(\r\n        //         (res) => {\r\n        //             this.setState({\r\n        //                 gData: res.message\r\n        //             })\r\n        //     })\r\n        //     .catch((err) => {\r\n        //         console.log(err)\r\n        //     })\r\n        try{\r\n            const res=await this.ajax('/getdata')\r\n            this.setState({\r\n                getData:res.message\r\n            })\r\n        }catch{\r\n\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <img src={this.state.gData} />\r\n                <button onClick={this.getData}>点击获取(Get)Mock数据</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Mock\r\n"]},"metadata":{},"sourceType":"module"}